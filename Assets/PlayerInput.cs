//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.1
//     from Assets/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInput : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""Player Movement"",
            ""id"": ""b836ed6a-fce3-40c9-85a9-e5a936cfdd73"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""07e17618-4f82-4fd0-bd39-f02a9b30e970"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""PassThrough"",
                    ""id"": ""359919b3-424a-44cf-b8d8-647c90fcd73d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SprintJump"",
                    ""type"": ""Button"",
                    ""id"": ""d39196b6-7a30-4121-b863-d257d4d4a8c5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""PassThrough"",
                    ""id"": ""c283c139-eaa5-44cf-9392-e94a48096a3b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""de1d6e33-7086-422d-a895-b15748351f83"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""50197e90-9b24-4e27-8185-a47143048904"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(pressPoint=0.1)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""StartLoad"",
                    ""type"": ""Button"",
                    ""id"": ""089d31ee-357a-4adf-9c21-a0a52132bf80"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Mouse"",
                    ""type"": ""PassThrough"",
                    ""id"": ""706bdfc8-0a61-46f4-95db-eff3f21a3c01"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""File"",
                    ""type"": ""PassThrough"",
                    ""id"": ""ce367b8e-7c7f-46a0-8ab5-1a1ca7b0c867"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DebugSub"",
                    ""type"": ""Value"",
                    ""id"": ""42b97d3e-e357-464f-b102-6f409e8c0872"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""DebugAdd"",
                    ""type"": ""Value"",
                    ""id"": ""17ef0c2d-3855-4de3-8b3e-222e756cf73c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""eca4ac4c-e136-40a9-9edd-e23b6efa1753"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""49417705-62e8-4cdc-8778-9627cdb92bf7"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""a8d6ac3a-2aac-4f6e-9e65-70f9c21d0ee5"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""b77d1d0a-8c2c-47f8-bbf8-947e5f531434"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""1a04c0d6-7db1-40f8-bd37-603f32f4103e"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""7f519f6b-fffd-428a-a27e-6be5f1f72abb"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1b97dff2-e3c8-423d-b262-0c8e9cf81650"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""480a9ded-1917-454a-92e9-ed593db78182"",
                    ""path"": ""<Pointer>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d402d4d8-6c72-4ac8-9a37-741b57bdb01b"",
                    ""path"": ""<Touchscreen>/Press"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StartLoad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2446ea17-d7b1-434a-b5b4-890a7c645776"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StartLoad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9fa9bfa5-e0e4-46e0-9685-76389187a552"",
                    ""path"": ""<Mouse>/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""06a93299-5ad6-4e88-8cd0-22fdc9d04449"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""File"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9d6de666-3f44-43e7-8249-e0e0ceb8cb0b"",
                    ""path"": ""<Keyboard>/o"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DebugAdd"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dffacd13-0c40-4677-b962-f7c26204ac32"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DebugSub"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""67cfd491-6a5d-4b6d-a52d-e76b3fac62c6"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4988a170-a8d5-4866-b89e-fbf9ef1fcdfc"",
                    ""path"": ""<Keyboard>/numpad1"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fe29a789-f4aa-4624-8395-920197425032"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""169f0ee8-a7a4-4a0d-abfc-83aa515c3bca"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SprintJump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player Movement
        m_PlayerMovement = asset.FindActionMap("Player Movement", throwIfNotFound: true);
        m_PlayerMovement_Movement = m_PlayerMovement.FindAction("Movement", throwIfNotFound: true);
        m_PlayerMovement_Sprint = m_PlayerMovement.FindAction("Sprint", throwIfNotFound: true);
        m_PlayerMovement_SprintJump = m_PlayerMovement.FindAction("SprintJump", throwIfNotFound: true);
        m_PlayerMovement_Look = m_PlayerMovement.FindAction("Look", throwIfNotFound: true);
        m_PlayerMovement_Attack = m_PlayerMovement.FindAction("Attack", throwIfNotFound: true);
        m_PlayerMovement_Jump = m_PlayerMovement.FindAction("Jump", throwIfNotFound: true);
        m_PlayerMovement_StartLoad = m_PlayerMovement.FindAction("StartLoad", throwIfNotFound: true);
        m_PlayerMovement_Mouse = m_PlayerMovement.FindAction("Mouse", throwIfNotFound: true);
        m_PlayerMovement_File = m_PlayerMovement.FindAction("File", throwIfNotFound: true);
        m_PlayerMovement_DebugSub = m_PlayerMovement.FindAction("DebugSub", throwIfNotFound: true);
        m_PlayerMovement_DebugAdd = m_PlayerMovement.FindAction("DebugAdd", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player Movement
    private readonly InputActionMap m_PlayerMovement;
    private IPlayerMovementActions m_PlayerMovementActionsCallbackInterface;
    private readonly InputAction m_PlayerMovement_Movement;
    private readonly InputAction m_PlayerMovement_Sprint;
    private readonly InputAction m_PlayerMovement_SprintJump;
    private readonly InputAction m_PlayerMovement_Look;
    private readonly InputAction m_PlayerMovement_Attack;
    private readonly InputAction m_PlayerMovement_Jump;
    private readonly InputAction m_PlayerMovement_StartLoad;
    private readonly InputAction m_PlayerMovement_Mouse;
    private readonly InputAction m_PlayerMovement_File;
    private readonly InputAction m_PlayerMovement_DebugSub;
    private readonly InputAction m_PlayerMovement_DebugAdd;
    public struct PlayerMovementActions
    {
        private @PlayerInput m_Wrapper;
        public PlayerMovementActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_PlayerMovement_Movement;
        public InputAction @Sprint => m_Wrapper.m_PlayerMovement_Sprint;
        public InputAction @SprintJump => m_Wrapper.m_PlayerMovement_SprintJump;
        public InputAction @Look => m_Wrapper.m_PlayerMovement_Look;
        public InputAction @Attack => m_Wrapper.m_PlayerMovement_Attack;
        public InputAction @Jump => m_Wrapper.m_PlayerMovement_Jump;
        public InputAction @StartLoad => m_Wrapper.m_PlayerMovement_StartLoad;
        public InputAction @Mouse => m_Wrapper.m_PlayerMovement_Mouse;
        public InputAction @File => m_Wrapper.m_PlayerMovement_File;
        public InputAction @DebugSub => m_Wrapper.m_PlayerMovement_DebugSub;
        public InputAction @DebugAdd => m_Wrapper.m_PlayerMovement_DebugAdd;
        public InputActionMap Get() { return m_Wrapper.m_PlayerMovement; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerMovementActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerMovementActions instance)
        {
            if (m_Wrapper.m_PlayerMovementActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnMovement;
                @Sprint.started -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnSprint;
                @Sprint.performed -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnSprint;
                @Sprint.canceled -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnSprint;
                @SprintJump.started -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnSprintJump;
                @SprintJump.performed -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnSprintJump;
                @SprintJump.canceled -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnSprintJump;
                @Look.started -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnLook;
                @Attack.started -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnAttack;
                @Attack.performed -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnAttack;
                @Attack.canceled -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnAttack;
                @Jump.started -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnJump;
                @StartLoad.started -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnStartLoad;
                @StartLoad.performed -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnStartLoad;
                @StartLoad.canceled -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnStartLoad;
                @Mouse.started -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnMouse;
                @Mouse.performed -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnMouse;
                @Mouse.canceled -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnMouse;
                @File.started -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnFile;
                @File.performed -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnFile;
                @File.canceled -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnFile;
                @DebugSub.started -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnDebugSub;
                @DebugSub.performed -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnDebugSub;
                @DebugSub.canceled -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnDebugSub;
                @DebugAdd.started -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnDebugAdd;
                @DebugAdd.performed -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnDebugAdd;
                @DebugAdd.canceled -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnDebugAdd;
            }
            m_Wrapper.m_PlayerMovementActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Sprint.started += instance.OnSprint;
                @Sprint.performed += instance.OnSprint;
                @Sprint.canceled += instance.OnSprint;
                @SprintJump.started += instance.OnSprintJump;
                @SprintJump.performed += instance.OnSprintJump;
                @SprintJump.canceled += instance.OnSprintJump;
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
                @Attack.started += instance.OnAttack;
                @Attack.performed += instance.OnAttack;
                @Attack.canceled += instance.OnAttack;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @StartLoad.started += instance.OnStartLoad;
                @StartLoad.performed += instance.OnStartLoad;
                @StartLoad.canceled += instance.OnStartLoad;
                @Mouse.started += instance.OnMouse;
                @Mouse.performed += instance.OnMouse;
                @Mouse.canceled += instance.OnMouse;
                @File.started += instance.OnFile;
                @File.performed += instance.OnFile;
                @File.canceled += instance.OnFile;
                @DebugSub.started += instance.OnDebugSub;
                @DebugSub.performed += instance.OnDebugSub;
                @DebugSub.canceled += instance.OnDebugSub;
                @DebugAdd.started += instance.OnDebugAdd;
                @DebugAdd.performed += instance.OnDebugAdd;
                @DebugAdd.canceled += instance.OnDebugAdd;
            }
        }
    }
    public PlayerMovementActions @PlayerMovement => new PlayerMovementActions(this);
    public interface IPlayerMovementActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnSprint(InputAction.CallbackContext context);
        void OnSprintJump(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnStartLoad(InputAction.CallbackContext context);
        void OnMouse(InputAction.CallbackContext context);
        void OnFile(InputAction.CallbackContext context);
        void OnDebugSub(InputAction.CallbackContext context);
        void OnDebugAdd(InputAction.CallbackContext context);
    }
}
